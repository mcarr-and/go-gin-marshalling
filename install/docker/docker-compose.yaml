version: "3.9"
x-default-logging: &logging
  driver: "json-file"
  options:
    max-size: "5m"
    max-file: "2"

networks:
  default:
    name: default-full
    driver: bridge

services:

  # Jager Tracing
  jaeger:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    restart: always
    ports:
      - "16696:16686"
      - "14268" # jaeger.thrift
      - "14250" # model.proto
      - "4317" # otel grpc
      - "4318" # otel http
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    logging: *logging

  # Open Telemetry Collector
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    restart: always
    command:
      [ "--config=/etc/otel-collector-config.yaml",
        "--config=/etc/otel-collector-config-extras.yaml"
      ]
    volumes:
      - ./config/otelcollector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
      - ./config/otelcollector/otel-collector-config-extras.yaml:/etc/otel-collector-config-extras.yaml
    ports:
      - "1888" # pprof extension
      - "8888" # Prometheus metrics endpoint
      - "8889" # Prometheus exporter metrics
      - "9464" # Prometheus exporter
      - "13133" # health_check extension
      - "4327:4317" # OTLP gRPC receiver
      - "4328:4318" # OTLP http receiver
      - "55679" # zpages extension
    depends_on:
      - jaeger
    logging: *logging

  # Prometheus Monitoring
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus/prometheus.yaml
    ports:
      - "9090:9090"
    logging: *logging

  # Grafana Monitoring Dashboards
  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ./config/grafana/provisioning/:/etc/grafana/provisioning/
    ports:
      - "3000:3000"
    logging: *logging

  # Album-Store Go Application
  album-store:
    container_name: album-store
    image: album-store:latest
    restart: always
    environment:
      - OTEL_LOCATION=otel-collector:4318
      - NAMESPACE=default
      - INSTANCE_NAME=album-store-1
      - GRPC_GO_LOG_SEVERITY_LEVEL=99
      - GRPC_GO_LOG_VERBOSITY_LEVEL=info
    ports:
      - "9080:9080"
    depends_on:
      - otel-collector
    logging: *logging

  # Proxy-Service Go Application
  proxy-service:
    container_name: proxy-service
    image: proxy-service:latest
    restart: always
    environment:
      - OTEL_LOCATION=otel-collector:4318
      - NAMESPACE=default
      - INSTANCE_NAME=proxy-service-1
      - GRPC_GO_LOG_SEVERITY_LEVEL=99
      - GRPC_GO_LOG_VERBOSITY_LEVEL=info
      - ALBUM_STORE_URL=http://album-store:9080
    ports:
      - "9070:9070"
    depends_on:
      - otel-collector
    logging: *logging