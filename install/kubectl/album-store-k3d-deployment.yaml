apiVersion: v1
kind: List
items:
  - apiVersion: v1
    kind: Service
    metadata:
      namespace: "album-store"
      name: "album-store"
      annotations:
        prometheus.io/probe: "true"
        prometheus.io/probe-path: /status
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "9080"
      labels:
        app.kubernetes.io/instance: "album-store"
        app.kubernetes.io/name: "album-store"
        app.kubernetes.io/version: "0.1.0"
    spec:
      internalTrafficPolicy: Cluster
      ipFamilies:
        - IPv4
      ipFamilyPolicy: SingleStack
      ports:
        - protocol: TCP
          name: http
          port: 9080
          targetPort: 9080
      selector:
        app.kubernetes.io/instance: "album-store"
        app.kubernetes.io/name: "album-store"
        app.kubernetes.io/version: "0.1.0"
      sessionAffinity: None
      type: ClusterIP
---
apiVersion: v1
kind: List
items:
  - apiVersion: apps/v1
    kind: Deployment
    metadata:
      labels:
        app.kubernetes.io/name: "album-store"
        app.kubernetes.io/instance: "album-store"
        app.kubernetes.io/version: "0.1.0"
      name: "album-store"
      namespace: "album-store"
    spec:
      replicas: 3
      selector:
        matchLabels:
          app.kubernetes.io/component: "album-store"
          app.kubernetes.io/instance: "album-store"
          app.kubernetes.io/name: "album-store"
          app.kubernetes.io/version: "0.1.0"
      strategy:
        rollingUpdate:
          maxSurge: 0
          maxUnavailable: 1
        type: RollingUpdate
      template:
        metadata:
          labels:
            app.kubernetes.io/component: "album-store"
            app.kubernetes.io/instance: "album-store"
            app.kubernetes.io/name: "album-store"
            app.kubernetes.io/version: "0.1.0"
        spec:
          containers:
            - name: "album-store"
              image: registry.local:54094/album-store:0.1 # use the cluster internal name to reference registry
              imagePullPolicy: Always
              env:
                - name: INSTANCE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: OTEL_LOCATION
                  value: "opentelemetry-collector.observability.svc.cluster.local:4317"
                - name: GRPC_GO_LOG_VERBOSITY_LEVEL
                  value: "99"
                - name: GRPC_GO_LOG_SEVERITY_LEVEL
                  value: "info"
              ports:
                - name: http
                  containerPort: 9080
                  protocol: TCP
              resources:
                requests:
                  memory: "64Mi"
                  cpu: "250m"
                limits:
                  memory: "128Mi"
                  cpu: "500m"
              livenessProbe:
                httpGet:
                  path: /status
                  port: http
                initialDelaySeconds: 1
                periodSeconds: 5
          dnsPolicy: ClusterFirst # must be `ClusterFirst` to allow nginx to route to it via the ingress
          restartPolicy: Always
          terminationGracePeriodSeconds: 30