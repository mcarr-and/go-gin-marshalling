apiVersion: v1
kind: Pod
metadata:
  name: album-store
  namespace: opentelemetry
spec:
  containers:
    - name: album-store
      image: k3d-registry:54094/album-store:v0.1
      command: ["/app/album-store"]
      ports:
        - containerPort: 9080
      env:
        - name: INSTANCE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OTEL_LOCATION
          value: "opentelemetry-collector.opentelemetry.svc.cluster.local:4317"
        - name: GRPC_GO_LOG_VERBOSITY_LEVEL
          value: "99"
        - name: GRPC_GO_LOG_SEVERITY_LEVEL
          value: "info"
  restartPolicy: Never
---
apiVersion: v1
kind: Service
metadata:
  name: album-store-service
  namespace: opentelemetry
spec:
  selector:
    app.kubernetes.io/name: album-store
  ports:
    - protocol: TCP
      port: 80
      targetPort: 9080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: album-store-ingress
  namespace: opentelemetry
  annotations:
#    nginx.ingress.kubernetes.io/rewrite-target: /
#    meta.helm.sh/release-name: album-store
#    meta.helm.sh/release-namespace: opentelemetry
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/use-port-in-redirects: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: album-store.local
      http:
        paths:
        - backend:
           service:
            name: album-store
            port:
              number: 80
          path: /
          pathType: ImplementationSpecific