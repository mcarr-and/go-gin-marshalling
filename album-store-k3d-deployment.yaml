apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: "album-store"
    meta.helm.sh/release-namespace: "album-store"
  labels:
    app.kubernetes.io/name: "album-store"
    app.kubernetes.io/instance: "album-store"
    app.kubernetes.io/version: "0.1"
  name: "album-store"
  namespace: "album-store"
---
apiVersion: v1
kind: Pod
metadata:
  name: "album-store"
  namespace: "album-store"
  labels:
    app.kubernetes.io/name: "album-store"
    app.kubernetes.io/instance: "album-store"
    app.kubernetes.io/version: "0.1"
spec:
  containers:
    - name: "album-store"
      image: k3d-registry:54094/album-store:0.1 # use the cluster internal name to reference registry
      command: ["/app/album-store"]
      resources:
        requests:
          memory: "64Mi"
          cpu: "250m"
        limits:
          memory: "128Mi"
          cpu: "500m"
      ports:
        - containerPort: 9080
          name: http
          protocol: TCP
      env:
        - name: INSTANCE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OTEL_LOCATION
          value: "opentelemetry-collector.opentelemetry.svc.cluster.local:4317"
        - name: GRPC_GO_LOG_VERBOSITY_LEVEL
          value: "99"
        - name: GRPC_GO_LOG_SEVERITY_LEVEL
          value: "info"
  restartPolicy: Never
  hostname: "album-store"
  serviceAccountName: "album-store"
  dnsPolicy: ClusterFirst # must be `ClusterFirst` to allow nginx to route to it via the ingress
  enableServiceLinks: true
---
apiVersion: v1
kind: Service
metadata:
  namespace: "album-store"
  name: "album-store"
  annotations:
    prometheus.io/probe: "true"
    prometheus.io/probe-path: /
  labels:
    app.kubernetes.io/name: "album-store"
    app.kubernetes.io/instance: "album-store"
    app.kubernetes.io/version: "0.1"
spec:
  ports:
    - protocol: TCP
      name: http
      port: 9080
      targetPort: 9080
  selector:
    app.kubernetes.io/name: "album-store"
    app.kubernetes.io/instance: "album-store"
    app.kubernetes.io/version: "0.1"
  sessionAffinity: None
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/use-port-in-redirects: "true"
    app.kubernetes.io/name: "album-store"
  labels:
    app.kubernetes.io/name: "album-store"
    app.kubernetes.io/instance: "album-store"
    app.kubernetes.io/version: "0.1"
  name: "album-store"
  namespace: "album-store"
spec:
  ingressClassName: nginx
  rules:
    - host: album-store.local
      http:
        paths:
          - backend:
              service:
                name: album-store
                port:
                  number: 9080
            path: /
            pathType: ImplementationSpecific